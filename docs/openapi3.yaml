openapi: 3.0.3
info:
  title: Admin Service
  description: Service for admin
  version: "1.0"
servers:
- url: http://localhost:8000
paths:
  /openapi.json:
    get:
      tags:
      - admin
      summary: Download ./gen/http/openapi.json
      operationId: admin#/openapi.json
      responses:
        "200":
          description: File downloaded
  /users/:
    post:
      tags:
      - admin
      summary: RegisterUser admin
      operationId: admin#RegisterUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUserRequestBody'
            example:
              email: tom@example.com
              first-name: fn
              last-name: ln
              tel: 000-0000-0000
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterUserResponseBody'
              example:
                email: tom@example.com
                first-name: fn
                id: 101
                last-name: ln
                tel: 000-0000-0000
  /users/{id}:
    get:
      tags:
      - admin
      summary: GetUser admin
      operationId: admin#GetUser
      parameters:
      - name: id
        in: path
        description: User ID
        required: true
        schema:
          type: integer
          description: User ID
          example: 2775401034997647783
          format: int64
        example: 963784283845106650
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterUserResponseBody'
              example:
                email: tom@example.com
                first-name: fn
                id: 101
                last-name: ln
                tel: 000-0000-0000
components:
  schemas:
    RegisterUserRequestBody:
      type: object
      properties:
        email:
          type: string
          description: Email
          example: tom@example.com
          format: email
          minLength: 1
          maxLength: 256
        first-name:
          type: string
          description: first-name
          example: fn
          format: regexp
          pattern: ^[0-9a-zA-Z\.\-_~]*$
          minLength: 1
          maxLength: 128
        last-name:
          type: string
          description: last-name
          example: ln
          format: regexp
          pattern: ^[0-9a-zA-Z\.\-_~]*$
          minLength: 1
          maxLength: 128
        tel:
          type: string
          description: tel
          example: 000-0000-0000
          format: regexp
          pattern: ^\d{3}-\d{4}-\d{4}$
          minLength: 1
          maxLength: 128
      example:
        email: tom@example.com
        first-name: fn
        last-name: ln
        tel: 000-0000-0000
      required:
      - first-name
      - last-name
      - email
      - tel
    RegisterUserResponseBody:
      type: object
      properties:
        email:
          type: string
          description: Email
          example: tom@example.com
          format: email
          minLength: 1
          maxLength: 256
        first-name:
          type: string
          description: first-name
          example: fn
          format: regexp
          pattern: ^[0-9a-zA-Z\.\-_~]*$
          minLength: 1
          maxLength: 128
        id:
          type: integer
          description: id
          example: 101
          format: int64
        last-name:
          type: string
          description: last-name
          example: ln
          format: regexp
          pattern: ^[0-9a-zA-Z\.\-_~]*$
          minLength: 1
          maxLength: 128
        tel:
          type: string
          description: tel
          example: 000-0000-0000
          format: regexp
          pattern: ^\d{3}-\d{4}-\d{4}$
          minLength: 1
          maxLength: 128
      example:
        email: tom@example.com
        first-name: fn
        id: 101
        last-name: ln
        tel: 000-0000-0000
tags:
- name: admin
  description: The admin service performs operations on users.
